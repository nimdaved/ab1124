package org.nimdaved.toolrent.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class RentalAgreementAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRentalAgreementAllPropertiesEquals(RentalAgreement expected, RentalAgreement actual) {
        assertRentalAgreementAutoGeneratedPropertiesEquals(expected, actual);
        assertRentalAgreementAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRentalAgreementAllUpdatablePropertiesEquals(RentalAgreement expected, RentalAgreement actual) {
        assertRentalAgreementUpdatableFieldsEquals(expected, actual);
        assertRentalAgreementUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRentalAgreementAutoGeneratedPropertiesEquals(RentalAgreement expected, RentalAgreement actual) {
        assertThat(expected)
            .as("Verify RentalAgreement auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRentalAgreementUpdatableFieldsEquals(RentalAgreement expected, RentalAgreement actual) {
        assertThat(expected)
            .as("Verify RentalAgreement relevant properties")
            .satisfies(e -> assertThat(e.getAgreement()).as("check agreement").isEqualTo(actual.getAgreement()))
            .satisfies(e -> assertThat(e.getStatus()).as("check status").isEqualTo(actual.getStatus()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRentalAgreementUpdatableRelationshipsEquals(RentalAgreement expected, RentalAgreement actual) {
        assertThat(expected)
            .as("Verify RentalAgreement relationships")
            .satisfies(e -> assertThat(e.getRental()).as("check rental").isEqualTo(actual.getRental()));
    }
}
