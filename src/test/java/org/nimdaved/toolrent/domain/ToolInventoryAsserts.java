package org.nimdaved.toolrent.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ToolInventoryAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertToolInventoryAllPropertiesEquals(ToolInventory expected, ToolInventory actual) {
        assertToolInventoryAutoGeneratedPropertiesEquals(expected, actual);
        assertToolInventoryAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertToolInventoryAllUpdatablePropertiesEquals(ToolInventory expected, ToolInventory actual) {
        assertToolInventoryUpdatableFieldsEquals(expected, actual);
        assertToolInventoryUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertToolInventoryAutoGeneratedPropertiesEquals(ToolInventory expected, ToolInventory actual) {
        assertThat(expected)
            .as("Verify ToolInventory auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertToolInventoryUpdatableFieldsEquals(ToolInventory expected, ToolInventory actual) {
        assertThat(expected)
            .as("Verify ToolInventory relevant properties")
            .satisfies(e -> assertThat(e.getLocation()).as("check location").isEqualTo(actual.getLocation()))
            .satisfies(e -> assertThat(e.getStockCount()).as("check stockCount").isEqualTo(actual.getStockCount()))
            .satisfies(e -> assertThat(e.getCheckedOutCount()).as("check checkedOutCount").isEqualTo(actual.getCheckedOutCount()))
            .satisfies(e -> assertThat(e.getOnHoldCount()).as("check onHoldCount").isEqualTo(actual.getOnHoldCount()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertToolInventoryUpdatableRelationshipsEquals(ToolInventory expected, ToolInventory actual) {
        // empty method
    }
}
